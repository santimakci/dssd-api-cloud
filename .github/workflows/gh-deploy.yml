name: Deploy to EC2

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy_to_ec2:
    environment: staging
    name: Deploy to EC2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/dssd-api-cloud
            rm -rf dist/
            rm -rf node_modules/

      - name: Copy package.json  and package-lock.json to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: 'package.json package-lock.json'
          target: '/home/ubuntu/dssd-api-cloud/'

      - name: Copy node modules to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: 'node_modules/'
          target: '/home/ubuntu/dssd-api-cloud/'
          strip_components: 0

      - name: Copy dist folder to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: 'dist/'
          target: '/home/ubuntu/dssd-api-cloud/'
          strip_components: 0

      - name: Build and restart Docker containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/dssd-api-cloud
            docker compose down 
            docker compose up -d --build
